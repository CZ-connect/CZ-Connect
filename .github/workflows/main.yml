name: Build and deploy an app to AKS with Kompose

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "czfluttercontainers"
  RESOURCE_GROUP: "czapp"
  CLUSTER_NAME: "czcluster"
  DOCKER_COMPOSE_FILE_PATH: "docker-compose.yml"
  CONTAINER_NAME-db: "mssql-db"
  CONTAINER_NAME-gate: "czconnect-backend"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check Azure CLI version
        run: az --version
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: azure/docker-login@v1
        with:
          login-server: czfluttercontainers.azurecr.io
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      - name: Build and push images to ACR
        run: |
          docker-compose -f ${DOCKER_COMPOSE_FILE_PATH} build
          docker-compose -f ${DOCKER_COMPOSE_FILE_PATH} push
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [ buildImage ]
    steps:
      - uses: actions/checkout@v3
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'
      # Runs Kompose to create manifest files
      - name: Bake deployment
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "kompose"
          dockerComposeFile: ${{ env.DOCKER_COMPOSE_FILE_PATH }}
          kompose-version: "v1.26.0"  # set this to the desired Kompose version
        id: bake

      # Deploys application based on manifest files from previous step
      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          strategy: basic
          manifests: ${{ steps.bake.outputs.manifestsBundle }}