version: '3'

services:
  czconnect-backend:
    container_name: czconnect-backend
    image: czfluttercontainers.azurecr.io/czconnect-backend:latest
    build:
      context: backend
      dockerfile: Dockerfile-backend
    env_file:
      - backend/.env
    ports:
      - 3000:3000
    networks:
      - czconnect

  mssql-db:
    container_name: mssql-db
    image: czfluttercontainers.azurecr.io/mssql-db:latest
    build:
      context: backend
      dockerfile: Dockerfile-mssql
    ports:
      - 1433:1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=3Q%8C7`5e_dXZ#H
    volumes:
      - mssql:/var/opt/mssql/data
    networks:
      - czconnect

#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus
#    restart: on-failure
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus:/etc/prometheus/
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#    networks:
#      - czconnect
#
#  grafana:
#    container_name: grafana
#    image: grafana/grafana
#    restart: on-failure
#    environment:
#      GF_SERVER_HTTP_PORT: 5000
#    ports:
#      - 5000:5000
#    volumes:
#      - grafana_data:/var/lib/grafana
#    networks:
#      - czconnect
#
#  node-exporter:
#    container_name: node-exporter
#    image: prom/node-exporter
#    restart: on-failure
#    ports:
#      - 9100:9100
#    networks:
#      - czconnect

  flutter-web:
    image: czfluttercontainers.azurecr.io/czconnect-flutter-web:latest
    build:
      context: cz_app
      dockerfile: Dockerfile
    ports:
      - 3011:3011
    command: ["flutter", "run", "-d", "web-server", "--web-port", "3011", "--web-hostname", "0.0.0.0"]
    networks:
      - czconnect

networks:
  czconnect:

volumes:
  mssql:
#  prometheus_data:
#  grafana_data:
